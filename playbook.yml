---
- name: Instalar y configurar Nginx en VM separada
  hosts: nginx
  become: true
  gather_facts: false
  vars_files:
    - vars/main.yml
  
  tasks:
    - name: Actualizar cache de paquetes
      apt:
        update_cache: yes

    - name: Instalar Nginx
      apt:
        name: nginx
        state: present

    - name: Crear directorio para configuración personalizada
      file:
        path: /etc/nginx/conf.d
        state: directory
        mode: '0755'

    - name: Copiar configuración base de Nginx
      template:
        src: templates/nginx-base.conf.j2
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: '0644'
      notify: restart nginx

    - name: Cambiar propietario de /var/www/html
      file:
        path: /var/www/html
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        recurse: yes

    - name: Copiar aplicación Teclado al directorio web (rsync desde control)
      become: false
      synchronize:
        src: "{{ playbook_dir }}/../Teclado/"
        dest: /var/www/html/
        recursive: yes
      delegate_to: localhost

    - name: Asegurar propietario y permisos en /var/www/html
      file:
        path: /var/www/html
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        recurse: yes

    - name: Habilitar servicio Nginx
      systemd:
        name: nginx
        enabled: yes
        state: started

    - name: Mostrar información de Nginx
      debug:
        msg:
          - "==================================================="
          - "Nginx Proxy configurado exitosamente!"
          - "IP del Proxy: {{ ansible_host }}"
          - "Nginx está apuntando a:"
          - "  - Jenkins: {{ jenkins_host }}:{{ jenkins_port }}"
          - "  - SonarQube: {{ sonar_host }}:{{ sonar_port }}"
          - ""
          - "Una vez que Jenkins y SonarQube estén desplegados,"
          - "accede a través de:"
          - "  - http://{{ ansible_host }}/jenkins/"
          - "  - http://{{ ansible_host }}/sonar/"
          - "==================================================="

  handlers:
    - name: restart nginx
      systemd:
        name: nginx
        state: restarted

- name: Instalación de Docker y Docker Compose en Ubuntu
  hosts: jenkins
  become: true
  gather_facts: false
  vars_files:
    - vars/main.yml
  
  tasks:
    - name: Actualizar el cache de paquetes
      apt:
        update_cache: yes

    - name: Instalar dependencias para Docker
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: present

    - name: Agregar la clave GPG oficial de Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Agregar el repositorio de Docker al sources.list.d
      shell: |
        echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable" | tee /etc/apt/sources.list.d/docker.list

    - name: Actualizar el cache de paquetes de nuevo
      apt:
        update_cache: yes

    - name: Instalar Docker
      apt:
        name: docker-ce
        state: present

    - name: Añadir el usuario actual al grupo de Docker
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Instalar Docker Compose
      shell: |
        curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
      args:
        creates: /usr/local/bin/docker-compose
    
    - name: Establecer vm.max_map_count en el kernel
      sysctl:
        name: vm.max_map_count
        value: "262144"
        state: present
        reload: yes
    
    - name: Copiar Dockerfile de Jenkins
      copy:
        src: Dockerfile.jenkins
        dest: /home/{{ ansible_user }}/Dockerfile.jenkins
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'

    - name: Copiar lista de plugins de Jenkins
      copy:
        src: plugins.txt
        dest: /home/{{ ansible_user }}/plugins.txt
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'

    - name: Copiar archivo de configuración JCasC
      copy:
        src: jenkins-casc.yaml
        dest: /home/{{ ansible_user }}/jenkins-casc.yaml
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'

    - name: Copiar docker-compose.yml
      copy:
        src: docker-compose.yml
        dest: /home/{{ ansible_user }}/docker-compose.yml
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'

    - name: Detener contenedores existentes (si existen)
      command: docker-compose down
      args:
        chdir: /home/{{ ansible_user }}/
      become: true
      become_user: root
      ignore_errors: true

    - name: Construir imagen personalizada de Jenkins con plugins
      command: docker-compose build jenkins
      args:
        chdir: /home/{{ ansible_user }}/
      become: true
      become_user: root

    - name: Ejecutar docker-compose.yml
      command: docker-compose up -d
      args:
        chdir: /home/{{ ansible_user }}/
      become: true
      become_user: root

    - name: Esperar a que Jenkins esté disponible
      wait_for:
        host: localhost
        port: 80
        delay: 10
        timeout: 300

    - name: Esperar a que SonarQube esté disponible
      wait_for:
        host: localhost
        port: 9000
        delay: 10
        timeout: 300

    - name: Mostrar información de acceso
      debug:
        msg:
          - "==================================================="
          - "Stack desplegado exitosamente!"
          - "Jenkins y SonarQube corriendo en: {{ ansible_host }}"
          - "Accede a través del proxy Nginx en:"
          - "  - http://4.246.162.7/jenkins/ (Jenkins)"
          - "  - http://4.246.162.7/sonar/ (SonarQube)"
          - "  - http://4.246.162.7/ (Página principal)"
          - ""
          - "Acceso directo (sin proxy):"
          - "  - http://{{ ansible_host }} (Jenkins en puerto 80)"
          - "  - http://{{ ansible_host }}:9000 (SonarQube directo)"
          - "==================================================="

  handlers:
    - name: restart docker
      systemd:
        name: docker
        state: restarted