version: "3"
services:
  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    image: jenkins-custom:latest
    container_name: jenkins
    environment:
      - JENKINS_OPTS=--httpPort=8080 --prefix=/jenkins
      - JAVA_OPTS=-Xmx512m -Xms256m
      - JENKINS_UC=http://updates.jenkins.io
    user: root
    ports:
      - "80:8080"
      - "50000:50000"
    expose:
      - "8080"
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-home:/home
    networks:
      - devops-net
    restart: unless-stopped
    mem_limit: 1g
    depends_on:
      - db

  sonarqube:
    image: sonarqube:8.2-community
    container_name: sonarqube
    depends_on:
      - db
    ports:
      - "9000:9000"
    environment:
      - sonar.jdbc.url=jdbc:postgresql://db:5432/sonar
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=sonar
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - devops-net
    restart: unless-stopped
    mem_limit: 1536m

  db:
    image: postgres:12-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - devops-net
    restart: unless-stopped
    mem_limit: 512m

networks:
  devops-net:
    driver: bridge

volumes:
  jenkins-data: {}
  jenkins-home: {}
  sonarqube_conf: {}
  sonarqube_data: {}
  sonarqube_extensions: {}
  postgresql: {}
  postgresql_data: {}